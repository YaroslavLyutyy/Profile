{
	"info": {
		"_postman_id": "fd8f56bd-25e9-4003-b360-d97d52bf1344",
		"name": "QAuto2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22116104"
	},
	"item": [
		{
			"name": "RegisterUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"\r",
							"    let a = \r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require ('uuid')",
							"",
							"pm.collectionVariables.set('username', uuid.v4() + \"@test.com\")",
							"pm.collectionVariables.set('password', 'asdffdsA1')"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{username}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"repeatPassword\": \"{{password}}\"\r\n}     ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto2.forstudy.space/api/auth/signup",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "LoginUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status = ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \n\"email\": \"{{username}}\",\n\"password\": \"{{password}}\", \n\"remember\": \"false\"\n\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto2.forstudy.space/api/auth/signin",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"auth",
						"signin"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBrands",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"function getRandomInt(min, max) {",
							"    min = Math.ceil(min);",
							"    max = Math.floor(max);",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"pm.test(\"Status = ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"",
							"    var randomBrandIndex = getRandomInt(0, jsonData.data.length - 1)",
							"    var brandId = jsonData.data[randomBrandIndex].id",
							"    pm.collectionVariables.set(\"randomBrandId\", brandId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://qauto2.forstudy.space/api/cars/brands",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"cars",
						"brands"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetModelsByBrandId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"function getRandomInt(min, max) {",
							"    min = Math.ceil(min);",
							"    max = Math.floor(max);",
							"    return Math.floor(Math.random() * (max - min + 1)) + min;",
							"}",
							"",
							"pm.test(\"Status = ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"",
							"    var randomModelIndex = getRandomInt(0, jsonData.data.length - 1)",
							"    var modelId = jsonData.data[randomModelIndex].id",
							"    pm.collectionVariables.set(\"randomModelId\", modelId);",
							"",
							"    for (var i = 0; i < jsonData.data.length; i = i + 1) {",
							"        console.log(jsonData.data [i])",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://qauto2.forstudy.space/api/cars/models?carBrandId={{randomBrandId}}",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"cars",
						"models"
					],
					"query": [
						{
							"key": "carBrandId",
							"value": "{{randomBrandId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AddAuto",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// var brandId = (1-5)",
							"// var modelId = 1=(1-5),2=(6-10), 3=(11-15), 4=(16-18), 5=(19-23)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Status = ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"",
							"    var carId = jsonData.data.id",
							"    pm.collectionVariables.set(\"carId\", carId);",
							"",
							"    var carCreatedAt = jsonData.data.carCreatedAt",
							"    pm.collectionVariables.set(\"carCreatedAt\", carCreatedAt);",
							"",
							"// var getTimeISO = new Date().toISOString();",
							"// console.log  (getTimeISO);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"carBrandId\": {{randomBrandId}},\n    \"carModelId\": {{randomModelId}},\n    \"mileage\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto2.forstudy.space/api/cars",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "FuelExpenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status = ok\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql('ok');",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"carId\": {{carId}},\n    \"reportedAt\": \"{{carCreatedAt}}\",\n    \"mileage\": 1,\n    \"liters\": 1,\n    \"totalCost\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto2.forstudy.space/api/expenses",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"expenses"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "randomBrandId",
			"value": ""
		},
		{
			"key": "randomModelId",
			"value": ""
		},
		{
			"key": "carId",
			"value": ""
		},
		{
			"key": "carCreatedAt",
			"value": ""
		}
	]
}